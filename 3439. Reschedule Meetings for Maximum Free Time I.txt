class Solution:
    def maxFreeTime(self, eventTime: int, k: int, startTime: List[int], endTime: List[int]) -> int:
        ft = []
        preET = 0
        answer = 0

        for sT, eT in zip(startTime, endTime):
            ft.append(sT - preET)
            preET = eT

        if eventTime - endTime[-1]:
            ft.append(eventTime - endTime[-1])

        if len(ft) <= k + 1:
            return sum(ft)
        else:
            tmp = sum(ft[:k+1])
            answer = tmp

            # print(tmp)

            for i in range(k + 1, len(ft)):
                tmp = tmp + ft[i] - ft[i - k - 1]
                answer = max(answer, tmp)

            return answer