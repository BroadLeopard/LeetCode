class Solution:
    def pacificAtlantic(self, heights: List[List[int]]) -> List[List[int]]:
        pacific = [[0 for _ in range(len(heights[0]))] for _ in range(len(heights))]
        
        pacificVisit = [[0 for _ in range(len(heights[0]))] for _ in range(len(heights))]
        atlanticVisit = [[0 for _ in range(len(heights[0]))] for _ in range(len(heights))]
        
        answer = []
        que = []
        dx = [0,0,1,-1]
        dy = [1,-1,0,0]
        
        for i in range(len(heights[0])):
            que.append([0, i])
        
        for i in range(1, len(heights)):
            que.append([i, 0])
                
        while que:
            x, y = que.pop(0)
            
            if pacificVisit[x][y]:
                continue
            
            pacificVisit[x][y] = 1
            pacific[x][y] = 1
            
            for t in range(4):
                if 0 <= x + dx[t] < len(heights) and 0 <= y + dy[t] < len(heights[0]) and heights[x + dx[t]][y + dy[t]] >= heights[x][y] and pacificVisit[x + dx[t]][y + dy[t]] == 0:               
                    que.append([x + dx[t], y + dy[t]])
            
        for i in range(len(heights[0])):
            que.append([len(heights) - 1, i])
            
        for i in range(len(heights) - 1):
            que.append([i, len(heights[0]) - 1])
            
        while que:
            x, y = que.pop(0)
            
            if atlanticVisit[x][y]:
                continue
                
            atlanticVisit[x][y] = 1
            
            if pacific[x][y]:
                answer.append([x, y])

            for t in range(4):
                if 0 <= x + dx[t] < len(heights) and 0 <= y + dy[t] < len(heights[0]) and heights[x + dx[t]][y + dy[t]] >= heights[x][y] and atlanticVisit[x + dx[t]][y + dy[t]] == 0:
                    que.append([x + dx[t], y + dy[t]])
                    
                    
        return sorted(answer)
            
            
        
        
        