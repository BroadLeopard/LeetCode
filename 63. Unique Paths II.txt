class Solution:
    def uniquePathsWithObstacles(self, obstacleGrid: List[List[int]]) -> int:
        if obstacleGrid[0][0] == 1:
            return 0
            
        r = len(obstacleGrid)
        c = len(obstacleGrid[0])
        arr = [[0 for _ in range(c)] for _ in range(r)]

        for i in range(r):
            for j in range(c):
                if obstacleGrid[i][j] == 1:
                    arr[i][j] = 1
                    obstacleGrid[i][j] = 0

        obstacleGrid[0][0] = 1
        
        for i in range(r):
            for j in range(c):
                if i + j == 0 or arr[i][j] == 1:
                    continue
            
                obstacleGrid[i][j] = obstacleGrid[max(i - 1, 0)][j] + obstacleGrid[i][max(j - 1, 0)]

        print(r, c)
        print(obstacleGrid)

        return obstacleGrid[r - 1][c - 1]