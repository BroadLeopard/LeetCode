# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def levelOrderBottom(self, root: Optional[TreeNode]) -> List[List[int]]:
        answer = []

        if root == None:
            return answer

        que = [root]

        while que:
            l = len(que)

            answer.append([q.val for q in que])

            for _ in range(l):
                tmp = que.pop(0)

                if tmp.left:
                    que.append(tmp.left)

                if tmp.right:
                    que.append(tmp.right)


        return reversed(answer)