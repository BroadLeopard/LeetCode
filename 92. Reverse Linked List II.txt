# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseBetween(self, head: Optional[ListNode], left: int, right: int) -> Optional[ListNode]:
        tmp = head
        li = []
        
        for i in range(1, right + 1):
            if left <= i:
                li.append(tmp.val)
            
            tmp = tmp.next
            
            
        tmp = head
            
        for i in range(1, right + 1):
            if left <= i:
                tmp.val = li.pop()
                
            tmp = tmp.next
                
        return head