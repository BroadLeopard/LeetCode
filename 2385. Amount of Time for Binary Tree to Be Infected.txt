# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def amountOfTime(self, root: Optional[TreeNode], start: int) -> int:
        answer = 0

        def func(node):
            nonlocal answer
            left = [0, 0]
            right = [0, 0]

            if node.left:
                left = func(node.left)

            if node.right:
                right = func(node.right)

            if node.val == start:
                answer = max(max(left[0], right[0]), answer)
                return [1, 1]

            if left[1] or right[1]:
                answer = max(left[0] + right[0], answer)

                if left[1]:
                    return [left[0] + 1, 1]
                else:
                    return [right[0] + 1, 1]
            
            return [max(left[0], right[0]) + 1, left[1] or right[1] or node.val == start]

        func(root)

        return answer